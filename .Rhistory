limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllRealAvNeu <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "real_DiffAvNeu", scaling = .5,
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllRealAvMin <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "real_DiffAvMin", scaling = .5,
limits = c(-absLimDiff, absLimDiff), method = "gam")
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
nrow = 2, ncol = 3)
allTopos
topoAllIma$guides$fill$title <- "Power Density (µV^2/Hz)")
topoAllIma$guides$fill$title <- "Power Density (µV^2/Hz)"
topoAllIma
topoAllIma <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "ima_allCS",
limits = c(-maxLimAll, maxLimAll), method = "gam")
topoAllIma$guides$fill$title <- "Power Density (µV^2/Hz)"
topoAllReal <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "real_allCS",
limits = c(-maxLimAll, maxLimAll), method = "gam")
topoAllReal$guides$fill$title <- "Power Density (µV^2/Hz)"
topoAllImaAvNeu <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "ima_DiffAvNeu",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllImaAvNeu$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
topoAllImaAvMin <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "ima_DiffAvMin",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllImaAvMin$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
topoAllRealAvNeu <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "real_DiffAvNeu",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllRealAvNeu$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
topoAllRealAvMin <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "real_DiffAvMin",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllRealAvMin$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
nrow = 2, ncol = 3)
allTopos
chanLocs
dfTopos
# Load channel locations and transform from 3D theta + radius into 2D x & y
# for plotting purposes
loadname <- paste0(pathname,"/channelLocations/chanLocs_biosemi64.txt")
chanLocs <- read.csv(loadname, sep = ";")
names(chanLocs) <- gsub("name","electrode",names(chanLocs))
chanLocs
# Load channel locations and transform from 3D theta + radius into 2D x & y
# for plotting purposes
loadname <- paste0(pathname,"/channelLocations/chanLocs_biosemi64.txt")
chanLocs <- read.csv(loadname, sep = ";")
chanLocs$thetaRadian <- pi/180*chanLocs$theta
chanLocs$x <- chanLocs$radius*sin(chanLocs$thetaRadian)*200
chanLocs$y <- chanLocs$radius*cos(chanLocs$thetaRadian)*200
names(chanLocs) <- gsub("name","electrode",names(chanLocs))
# number of electrodes
nrChans = length(topoAvgAVima)
# Create data frame with factors lab, driving frequency & modulation function,
# electrode name, x & y coordinates for plot & theta power for different conditions
dfTopos <- data.frame(
electrode = topoAvgAVima$channel,
ima_allCS = rowMeans(cbind(topoAvgAVima$theta, topoAvgNEUima$theta, topoAvgMINima$theta)),
ima_DiffAvNeu = topoAvgAVima$theta - topoAvgNEUima$theta,
ima_DiffAvMin = topoAvgAVima$theta - topoAvgMINima$theta,
real_allCS = rowMeans(cbind(topoAvgAVreal$theta, topoAvgNEUreal$theta, topoAvgMINreal$theta)),
real_DiffAvNeu = topoAvgAVreal$theta - topoAvgNEUreal$theta,
real_DiffAvMin = topoAvgAVreal$theta - topoAvgMINreal$theta
)
dfTopos <- merge(chanLocs, dfTopos, by = "electrode")
# settings for topography plots
topoRes <- 200
chanCol <- "black"
nrColors <- 8
minLimAll <- min(c(dfTopos$ima_allCS, dfTopos$real_allCS))
maxLimAll <- max(c(dfTopos$ima_allCS, dfTopos$real_allCS))
minLimDiff <- min(c(dfTopos$ima_DiffAvNeu, dfTopos$ima_DiffAvMin, dfTopos$real_DiffAvNeu, dfTopos$real_DiffAvMin))
maxLimDiff <- max(c(dfTopos$ima_DiffAvNeu, dfTopos$ima_DiffAvMin, dfTopos$real_DiffAvNeu, dfTopos$real_DiffAvMin))
absLimDiff <- max(abs(c(minLimDiff, maxLimDiff)))
### create topography plots
topoAllIma <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "ima_allCS",
limits = c(-maxLimAll, maxLimAll), method = "gam")
topoAllIma$guides$fill$title <- "Power Density (µV^2/Hz)"
topoAllReal <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "real_allCS",
limits = c(-maxLimAll, maxLimAll), method = "gam")
topoAllReal$guides$fill$title <- "Power Density (µV^2/Hz)"
topoAllImaAvNeu <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "ima_DiffAvNeu",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllImaAvNeu$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
topoAllImaAvMin <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "ima_DiffAvMin",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllImaAvMin$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
topoAllRealAvNeu <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "real_DiffAvNeu",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllRealAvNeu$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
topoAllRealAvMin <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "real_DiffAvMin",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllRealAvMin$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
nrow = 2, ncol = 3)
allTopos
allTopos
?topoplot
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 200,
height = 100,
units = "mm"
)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
topoAllIma <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "ima_allCS",
limits = c(-maxLimAll, maxLimAll), method = "gam")
topoAllIma$guides$fill$title <- "Power Density (µV^2/Hz)"
topoReal$guides$fill$title.theme$size <- 10
topoReal$guides$fill$title.hjust <- 0.5
topoAllIma$guides$fill$title.theme$size <- 10
topoAllIma$guides$fill$title.hjust <- 0.5
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
topoAllIma$guides$fill$title.vjust <- 0.5
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
?ggarrange
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"Imagery-based: CS+av vs CS+neu",
"Imagery-based: CS+av vs CS-",
"Classical: Average across all CS",
"Classical: CS+av vs CS+neu",
"Classical: CS+av vs CS-"),
nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
# add margins
topoAllIma <- topoAllIma + margin(5,5,5,5,unit = "mm")
# add margins
topoAllIma <- topoAllIma + margin(5,5,5,5)
# add margins
topoAllIma <- topoAllIma + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllReal <- topoAllReal + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllImaAvNeu <- topoAllImaAvNeu + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllImaAvMin <- topoAllImaAvMin + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllRealAvNeu <- topoAllRealAvNeu + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllRealAvMin <- topoAllRealAvMin + theme(plot.margin = unit(c(5,5,5,5), "mm"))
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"Imagery-based: CS+av vs CS+neu",
"Imagery-based: CS+av vs CS-",
"Classical: Average across all CS",
"Classical: CS+av vs CS+neu",
"Classical: CS+av vs CS-"),
nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
warnings()
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"Imagery-based: CS+av vs CS+neu",
"Imagery-based: CS+av vs CS-",
"Classical: Average across all CS",
"Classical: CS+av vs CS+neu",
"Classical: CS+av vs CS-"),
hjust = 0.3
nrow = 2, ncol = 3)
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"Imagery-based: CS+av vs CS+neu",
"Imagery-based: CS+av vs CS-",
"Classical: Average across all CS",
"Classical: CS+av vs CS+neu",
"Classical: CS+av vs CS-"),
hjust = 0.3, nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"Imagery-based: CS+av vs CS+neu",
"Imagery-based: CS+av vs CS-",
"Classical: Average across all CS",
"Classical: CS+av vs CS+neu",
"Classical: CS+av vs CS-"),
hjust = 0, nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"Imagery-based: CS+av vs CS+neu",
"Imagery-based: CS+av vs CS-",
"Classical: Average across all CS",
"Classical: CS+av vs CS+neu",
"Classical: CS+av vs CS-"),
hjust = -0.2, nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"   Imagery-based: CS+av vs CS+neu   ",
"    Imagery-based: CS+av vs CS-     ",
"  Classical: Average across all CS  ",
"     Classical: CS+av vs CS+neu     ",
"      Classical: CS+av vs CS-       "),
hjust = -0.2, nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"   Imagery-based: CS+av vs CS+neu   ",
"    Imagery-based: CS+av vs CS-     ",
"  Classical: Average across all CS  ",
"     Classical: CS+av vs CS+neu     ",
"      Classical: CS+av vs CS-       "),
widths = c(2,1,1), hjust = -0.2, nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"   Imagery-based: CS+av vs CS+neu   ",
"    Imagery-based: CS+av vs CS-     ",
"  Classical: Average across all CS  ",
"     Classical: CS+av vs CS+neu     ",
"      Classical: CS+av vs CS-       "),
hjust = -0.2, nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
topoAllIma <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "ima_allCS",
limits = c(-maxLimAll, maxLimAll), method = "gam")
topoAllIma$guides$fill$title <- "Power Density (µV^2/Hz)"
topoAllIma$guides$fill$barheight <- unit(.5, "lines")
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"   Imagery-based: CS+av vs CS+neu   ",
"    Imagery-based: CS+av vs CS-     ",
"  Classical: Average across all CS  ",
"     Classical: CS+av vs CS+neu     ",
"      Classical: CS+av vs CS-       "),
hjust = -0.2, nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
topoAllIma$guides$fill$barheight <- unit(5, "lines")
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"   Imagery-based: CS+av vs CS+neu   ",
"    Imagery-based: CS+av vs CS-     ",
"  Classical: Average across all CS  ",
"     Classical: CS+av vs CS+neu     ",
"      Classical: CS+av vs CS-       "),
hjust = -0.2, nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
topoAllIma$guides$fill$barheight <- unit(10, "lines")
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"   Imagery-based: CS+av vs CS+neu   ",
"    Imagery-based: CS+av vs CS-     ",
"  Classical: Average across all CS  ",
"     Classical: CS+av vs CS+neu     ",
"      Classical: CS+av vs CS-       "),
hjust = -0.2, nrow = 2, ncol = 3)
# add margins
topoAllIma <- topoAllIma + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllReal <- topoAllReal + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllImaAvNeu <- topoAllImaAvNeu + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllImaAvMin <- topoAllImaAvMin + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllRealAvNeu <- topoAllRealAvNeu + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllRealAvMin <- topoAllRealAvMin + theme(plot.margin = unit(c(5,5,5,5), "mm"))
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"   Imagery-based: CS+av vs CS+neu   ",
"    Imagery-based: CS+av vs CS-     ",
"  Classical: Average across all CS  ",
"     Classical: CS+av vs CS+neu     ",
"      Classical: CS+av vs CS-       "),
hjust = -0.2, nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
topoAllIma$guides$fill$barheight <- unit(9, "lines")
topoAllImaAvNeu$guides$fill$barheight <- unit(12, "lines")
# add margins
topoAllIma <- topoAllIma + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllReal <- topoAllReal + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllImaAvNeu <- topoAllImaAvNeu + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllImaAvMin <- topoAllImaAvMin + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllRealAvNeu <- topoAllRealAvNeu + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllRealAvMin <- topoAllRealAvMin + theme(plot.margin = unit(c(5,5,5,5), "mm"))
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"   Imagery-based: CS+av vs CS+neu   ",
"    Imagery-based: CS+av vs CS-     ",
"  Classical: Average across all CS  ",
"     Classical: CS+av vs CS+neu     ",
"      Classical: CS+av vs CS-       "),
hjust = -0.2, nrow = 2, ncol = 3)
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
### create topography plots
topoAllIma <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "ima_allCS",
limits = c(-maxLimAll, maxLimAll), method = "gam")
topoAllIma$guides$fill$title <- "Power Density (µV^2/Hz)"
topoAllIma$guides$fill$barheight <- unit(9, "lines")
topoAllReal <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "real_allCS",
limits = c(-maxLimAll, maxLimAll), method = "gam")
topoAllReal$guides$fill$title <- "Power Density (µV^2/Hz)"
topoAllReal$guides$fill$barheight <- unit(9, "lines")
topoAllImaAvNeu <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "ima_DiffAvNeu",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllImaAvNeu$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
topoAllImaAvNeu$guides$fill$barheight <- unit(12, "lines")
topoAllImaAvMin <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "ima_DiffAvMin",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllImaAvMin$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
topoAllImaAvMin$guides$fill$barheight <- unit(12, "lines")
topoAllRealAvNeu <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "real_DiffAvNeu",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllRealAvNeu$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
topoAllRealAvNeu$guides$fill$barheight <- unit(12, "lines")
topoAllRealAvMin <- topoplot(data = dfTopos,
contour = FALSE, interp_limit = "head", highlights = "Fz",
grid_res = topoRes, quantity = "real_DiffAvMin",
limits = c(-absLimDiff, absLimDiff), method = "gam")
topoAllRealAvMin$guides$fill$title <- "Diff. in Power Density (µV^2/Hz)"
topoAllRealAvMin$guides$fill$barheight <- unit(12, "lines")
# add margins
topoAllIma <- topoAllIma + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllReal <- topoAllReal + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllImaAvNeu <- topoAllImaAvNeu + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllImaAvMin <- topoAllImaAvMin + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllRealAvNeu <- topoAllRealAvNeu + theme(plot.margin = unit(c(5,5,5,5), "mm"))
topoAllRealAvMin <- topoAllRealAvMin + theme(plot.margin = unit(c(5,5,5,5), "mm"))
allTopos <- ggarrange(topoAllIma, topoAllImaAvNeu, topoAllImaAvMin,
topoAllReal, topoAllRealAvNeu, topoAllRealAvMin,
labels = c("Imagery-based: Average across all CS",
"   Imagery-based: CS+av vs CS+neu   ",
"    Imagery-based: CS+av vs CS-     ",
"  Classical: Average across all CS  ",
"     Classical: CS+av vs CS+neu     ",
"      Classical: CS+av vs CS-       "),
hjust = -0.2, nrow = 2, ncol = 3)
allTopos
# save it
ggsave(filename = paste0(pathname, "/supplement/05s_theta_topographies.pdf"),
plot = allTopos,
width = 400,
height = 200,
units = "mm"
)
# --- author: Christian Panitz
# --- encoding: en_US.UTF-8
# --- R version: 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
# --- RStudio version: 1.3.1093
# --- script version: Jan 2023
# --- content: demographics (age, gender, & handedness)
################
### packages ###
################
# (installing and) loading required packages
# will install newest package version, not necessarily the version originally used!
if(!is.element("psych",installed.packages()[,1])) {install.packages("psych")}
library(psych)
if(!is.element("here",installed.packages()[,1])) {install.packages("here")}
library(here)
##################################
### loading and reporting data ###
##################################
# load rating data from text file
# (see imaCond3_demogrphicsAndRatings_readme.txt for more details)
pathname <- here()
dfRatings <- read.csv(paste0(pathname, "/experimentData/imaCond3_demographicsAndRatings.txt"), sep=",")
# descriptives for age across and separate for conditioning groups
describe(dfRatings$age)
describeBy(dfRatings$age, group = dfRatings$group)
# frequencies for self-reported gender across and separate for conditioning groups
table(dfRatings$gender)
table(dfRatings$gender, dfRatings$group)
# frequencies for self-reported handedness across and separate for conditioning groups
table(dfRatings$handedness)
table(dfRatings$handedness, dfRatings$group)
names(dfRatings)
